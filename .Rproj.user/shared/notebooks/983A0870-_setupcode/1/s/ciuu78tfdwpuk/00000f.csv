"0","#| include: false"
"0",""
"0","# ---- Analysis Functions"
"0",""
"0","# function: stan_to_df"
"0","# description: convert stan results to a data frame"
"0","stan_to_df <- function(object, include_warmup = FALSE){"
"0","  if (!requireNamespace('rstan', quietly = TRUE)) {"
"0","    stop('Package ""rstan"" needed for this function to work. Please install it.',"
"0","         call. = FALSE)"
"0","  }"
"0",""
"0","  params <- rstan::extract(object,"
"0","                           permuted = FALSE,"
"0","                           inc_warmup = TRUE)"
"0",""
"0","  col.names <- dimnames(params)$parameters"
"0",""
"0","  params <-"
"0","    do.call(apply(params, 3, function(u){"
"0","      tibble::tibble("
"0","        `_Value` = c(u),"
"0","        `_Chain` = rep(seq_along(dimnames(u)[[2]]),"
"0","                       each = nrow(u)),"
"0","        `_Iteration` = rep(seq(nrow(u)),"
"0","                           times = length(dimnames(u)[[2]])))}),"
"0","      what = 'cbind')"
"0",""
"0","  params <-"
"0","    cbind(dplyr::select(params, tidyselect::contains('_Value')),"
"0","          paste0('chain:', params[, ncol(params) - 1]),"
"0","          params[, ncol(params)]) |>"
"0","    tibble::as_tibble()"
"0",""
"0","  colnames(params) <- c(col.names, '.chain', '.iteration')"
"0",""
"0","  if (!include_warmup) {"
"0","    params <- params[params$`.iteration` > object@sim$warmup, ]"
"0","  } else {"
"0","    params$`.warmup` <-"
"0","      params$`.iteration` <= object@sim$warmup"
"0","  }"
"0",""
"0","  params"
"0","}"
